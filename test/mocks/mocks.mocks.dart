// Mocks generated by Mockito 5.4.4 from annotations
// in seek/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:seek/services/biometric_service.dart' as _i2;
import 'package:seek/services/qr_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BiometricService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricService extends _i1.Mock implements _i2.BiometricService {
  MockBiometricService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isBiometricAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isBiometricAvailable,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> authenticate() => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [QRService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQRService extends _i1.Mock implements _i4.QRService {
  MockQRService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> scanQRCode() => (super.noSuchMethod(
        Invocation.method(
          #scanQRCode,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #scanQRCode,
            [],
          ),
        )),
      ) as _i3.Future<String>);
}
